paths:
  rosters:
    post: 
      tags: 
        - Rosters
      summary: Create Roster
      description: |
        Create a Roster
      requestBody:
        description: A JSON object with a valid roster
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostRosterRequest"  
      responses: 
        201:
          description: Successfully create a roster by captain
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/PostRosterResponse'
        400:
          $ref: "../../common/errors.yml#/components/responses/BadRequest"
    get: 
      tags:
        - Rosters
      summary: All Rosters
      description: |
        Get all Rosters
      responses:
        200:
          description: Successfully get all rosters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRostersResponse'
        400:
          $ref: "../../common/errors.yml#/components/responses/BadRequest"

components: 
  schemas:
    GetRostersResponse:
      type: object
      properties:
        status_code:
          $ref: "../../common/schemas.yml#/components/schemas/StatusCode200"
        status_string:
          $ref: "../../common/schemas.yml#/components/schemas/StatusString200"
        request_id:
          $ref: "../../common/schemas.yml#/components/schemas/RequestId"
        response_data:
          type: array
          items: 
            type: object
            properties: 
              captainId: 
                type: integer
                example: 1
              captain: 
                $ref: "../../users/users.yml#/schemas/User"
              players: 
                type: array
                items: 
                  $ref: "../../users/users.yml#/schemas/User"
                            
    PostRosterRequest:
      type: object
      properties:
        captain_id:
          type: uint
          description: Id of the captain
          example: 1
        players:
          type: array
          description: Players associated to the roster
          example: []

    RosterModel:
      type: object
      properties:
        id:
          type: integer
          description: Id of the roster
          example: 1
        created_at:
          type: string
          format: date-time
          description: Created time for the roster
          example: "2024-06-06T23:41:00.352908346Z"
        updated_at:
          type: string
          format: date-time
          description: Updated time for the roster
          example: "2024-06-06T23:41:00.352908346Z"
        captain_id:
          type: uint
          description: Id of the captain
          example: 1
        players:
          type: array
          description: Players associated to the roster
          example: []

    PostRosterResponse:
      type: object
      properties:
        status_code:
          $ref: "../../common/schemas.yml#/components/schemas/StatusCode200"
        status_string:
          $ref: "../../common/schemas.yml#/components/schemas/StatusString200"
        request_id:
          $ref: "../../common/schemas.yml#/components/schemas/RequestId"
        response_data:
          $ref: "#/components/schemas/RosterModel"
